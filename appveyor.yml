build: false

branches:
 only:
  - dev

environment:
  matrix:
    - PYTHON_VERSION: 2.7
      PYTHON: C:\Miniconda-x64
      ENV: miniconda
      TEST_TOX_ENV: py27
      COVERAGE_TOX_ENV: coverage-py27
      BUILD_TOX_ENV: build-py27

    - PYTHON_VERSION: 3.5
      PYTHON: C:\Miniconda35-x64
      ENV: miniconda
      TEST_TOX_ENV: py35
      COVERAGE_TOX_ENV: coverage-py35
      BUILD_TOX_ENV: build-py35

    - PYTHON_VERSION: 3.6
      PYTHON: C:\Miniconda36-x64
      ENV: miniconda
      TEST_TOX_ENV: py36
      COVERAGE_TOX_ENV: coverage-py36
      BUILD_TOX_ENV: build-py36

    - PYTHON_VERSION: 2.7
      PYTHON: C:\\Python27-x64
      ENV: python
      TEST_TOX_ENV: py27
      COVERAGE_TOX_ENV: coverage-py27
      BUILD_TOX_ENV: build-py27

    - PYTHON_VERSION: 3.5
      PYTHON: C:\\Python35-x64
      ENV: python
      TEST_TOX_ENV: py35
      COVERAGE_TOX_ENV: coverage-py35
      BUILD_TOX_ENV: build-py35

    - PYTHON_VERSION: 3.6
      PYTHON: C:\\Python36-x64
      ENV: python
      TEST_TOX_ENV: py36
      COVERAGE_TOX_ENV: coverage-py36
      BUILD_TOX_ENV: build-py36

init:
  - "ECHO %PYTHON% %PYTHON_VERSION%"
  - "set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - if [%ENV%]==[miniconda] (
      conda config --set always_yes yes --set changeps1 no &&
      conda update -q conda &&
      conda info -a &&
      conda install -c anaconda numpy)
  - if [%ENV%]==[python] (
      pip install wheel)
  - pip install tox

test_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - tox -e %TEST_TOX_ENV%
  - tox -e %BUILD_TOX_ENV%
  - ps: (Get-Item $env:APPVEYOR_BUILD_FOLDER\dist\*none-any.whl).Name | ForEach-Object {tox -e $env:TEST_TOX_ENV recreate --installpkg $env:APPVEYOR_BUILD_FOLDER\dist\$_}

after_test:
  - tox -e %COVERAGE_TOX_ENV%
