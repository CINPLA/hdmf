run-style-check: &run-style-check
  name: Run Style Checks
  command: |
    . ../venv/bin/activate
    pip install flake8
    flake8

initialize-venv: &initialize-venv
  name: Initialize Virtual Environment
  command: |
    python -m virtualenv ../venv || python -m venv ../venv
    . ../venv/bin/activate

publish-prerelease-on-github: &publish-prerelease-on-github
  name: Publish wheel and source distribution on github
  command: |
    if [[ "${CIRCLE_BRANCH}" == "dev" && "${PUBLISH_RELEASE}" == "true" ]]; then
      . ../venv/bin/activate
      pip install -U scikit-ci-addons
      ci_addons publish_github_release NeurodataWithoutBorders/pynwb  \
          --prerelease-packages "dist/*" \
          --prerelease-sha dev \
          --prerelease-packages-clear-pattern "*" \
          --prerelease-packages-keep-pattern "*dev<COMMIT_DISTANCE>*" \
          --re-upload \
          --exit-success-if-missing-token
    fi

ci-steps: &ci-steps
  steps:
    - checkout
    - run:
        <<: *initialize-venv
    - run:
        name: Run the tests
        command: |
          . ../venv/bin/activate
          pip install tox
          tox -e $TEST_TOX_ENV
        # Install is expected to be quick. Increase timeout in case there are some network issues.
        # While pip installing tox does not output by default. Circle thinks task is dead after 10 min.
        no_output_timeout: 30m
    - run:
        name: Run coverage and submit to codecov-io
        command: |
          . ../venv/bin/activate
          tox -e $COVERAGE_TOX_ENV
    - run:
        name: Build wheel and source distribution
        command: |
          . ../venv/bin/activate
          tox -e $BUILD_TOX_ENV
    - run:
        name: Test installation from a wheel
        command: |
          . ../venv/bin/activate
          tox -e $TEST_TOX_ENV recreate --installpkg dist/*-none-any.whl
    - run:
        <<: *publish-prerelease-on-github

version: 2
jobs:
  flake8:
    docker:
      - image: circleci/python:3.6.3-jessie
    steps:
      - checkout
      - run:
          <<: *initialize-venv
      - run:
          <<: *run-style-check
  python27:
    docker:
      - image: circleci/python:2.7.14-jessie
    environment:
     - TEST_TOX_ENV: "py27"
     - COVERAGE_TOX_ENV: "coverage-py27"
     - BUILD_TOX_ENV: "build-py27"
    <<: *ci-steps

  python35:
    docker:
      - image: circleci/python:3.5.4-jessie
    environment:
     - TEST_TOX_ENV: "py35"
     - COVERAGE_TOX_ENV: "coverage-py35"
     - BUILD_TOX_ENV: "build-py35"
    <<: *ci-steps

  python36:
    docker:
      - image: circleci/python:3.6.3-jessie
    environment:
     - TEST_TOX_ENV: "py36"
     - COVERAGE_TOX_ENV: "coverage-py36"
     - BUILD_TOX_ENV: "build-py36"
     - PUBLISH_RELEASE: "true"
    <<: *ci-steps

workflows:
  version: 2
  test-package-publish:
    jobs:
      - flake8
      - python27
      - python35
      - python36
